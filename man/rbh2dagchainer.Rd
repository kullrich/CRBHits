% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rbh2dagchainer.R
\name{rbh2dagchainer}
\alias{rbh2dagchainer}
\title{rbh2dagchainer}
\usage{
rbh2dagchainer(
  rbhpairs,
  gene.position.cds1 = NULL,
  gene.position.cds2 = NULL,
  dagchainerpath = paste0(find.package("CRBHits"), "/extdata/dagchainer/"),
  gap_open_penalty = 0,
  gap_extension_penalty = -3,
  gap_length = 10000,
  max_match_score = 50,
  max_dist_allowed = 2e+05,
  max_evalue = 0.001,
  ignore_tandem = TRUE,
  min_number_aligned_pairs = 5,
  type = "bp",
  plotDotPlot = FALSE,
  DotPlotTitle = "DAGchainer results",
  colorBy = "none",
  kaks = NULL,
  ka.max = 5,
  ks.max = 5,
  ka.min = 0,
  ks.min = 0,
  select.chr = NULL
)
}
\arguments{
\item{rbhpairs}{(conditional-)reciprocal best hit (CRBHit) pair result (see \code{\link[CRBHits]{cds2rbh}}) [mandatory]}

\item{gene.position.cds1}{specify gene position for cds1 sequences (see \code{\link[CRBHits]{cds2genepos}}) [default: NULL]}

\item{gene.position.cds2}{specify gene position for cds2 sequences (see \code{\link[CRBHits]{cds2genepos}}) [default: NULL]}

\item{dagchainerpath}{specify the PATH to the DAGchainer binaries [default: /extdata/dagchainer/]}

\item{gap_open_penalty}{gap open penalty [default: 0]}

\item{gap_extension_penalty}{gap extension penalty [default: -3]}

\item{gap_length}{length of a gap (avgerage distance expected between two syntenic genes); if type is set to "idx" use 1 [default: 10000]}

\item{max_match_score}{Maximum match score [default: 50]}

\item{max_dist_allowed}{maximum distance allowed between two matches; if type is set to "idx" use 20 [default: 200000]}

\item{max_evalue}{Maximum E-value [default: 1e-3]}

\item{ignore_tandem}{ignore tandem duplicates [default = TRUE]}

\item{min_number_aligned_pairs}{Minimum number of Aligned Pairs [default: 5]}

\item{type}{specify if gene order index "idx" or gene base pair position "bp" should be extracted and used with DAGchainer [default: bp]}

\item{plotDotPlot}{specify if dotplot should be plotted [default: FALSE]}

\item{DotPlotTitle}{specify DotPlot title [default: 'DAGchainer results']}

\item{colorBy}{specify if dagchainer groups should be colored by "Ka", "Ks", "Ka/Ks" or "none" [default: none]}

\item{kaks}{specify Ka/Ks input obtained via `rbh2kaks()` [default: NULL]}

\item{ka.max}{specify max Ka to be filtered [default: 5]}

\item{ks.max}{specify max Ks to be filtered [default: 5]}

\item{ka.min}{specify min Ka to be filtered [default: 0]}

\item{ks.min}{specify min Ks to be filtered [default: 0]}

\item{select.chr}{filter results for chromosome names [default: NULL]}
}
\value{
\code{DAGchanier} results\cr
1: $gene1.chr\cr
2: $gene1.seq.id\cr
3: $gene1.start\cr
4: $gene1.end\cr
5: $gene1.mid\cr
6: $gene1.idx\cr
7: $gene2.chr\cr
8: $gene2.seq.id\cr
9: $gene2.start\cr
10: $gene2.end\cr
11: $gene2.mid\cr
12: $gene2.idx\cr
13: $evalue\cr
14: $score\cr
}
\description{
This function runs DAGchainer (http://dagchainer.sourceforge.net/) given CRBHit pairs and gene positions for both cds1 and cds2. The default options are set to not compare gene positions in base pairs but instead using gene order (gene.idx).
}
\examples{
## compile dagchainer
make_dagchainer()
## load example sequence data
data("ath", package="CRBHits")
## get selfhits CRBHit pairs
ath_selfhits_crbh <- cds2rbh(ath, ath, plotCurve = TRUE)
## get gene position
ath.genepos <- cds2genepos(ath, "ENSEMBL")
## get DAGchainer results
ath_selfblast_crbh.dagchainer <- rbh2dagchainer(ath_selfhits_crbh,
                                                ath.genepos, ath.genepos)
head(ath_selfblast_crbh.dagchainer)
## plot dagchainer
plot_dagchainer(ath_selfblast_crbh.dagchainer)
}
\references{
Haas BJ et al. (2004) DAGchainer: a tool for mining segmental genome duplications and synteny. \emph{Bioinformatics.} \bold{20(18)}, 3643-3646.
}
\seealso{
\code{\link[CRBHits]{plot_dagchainer}},
\code{\link[CRBHits]{cds2genepos}},
\code{\link[CRBHits]{tandemdups}},
\code{\link[CRBHits]{rbh2kaks}}
}
\author{
Kristian K Ullrich
}
